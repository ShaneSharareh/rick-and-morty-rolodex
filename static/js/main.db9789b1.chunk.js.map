{"version":3,"sources":["logo.svg","components/card-list/card-item.jsx","components/card-list/card-list.jsx","components/card-list/card-modal.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","onClick","setCurrentCharacter","character","className","alt","name","src","image","CardList","this","characters","map","id","React","Component","CardModal","setEpisode","e","setState","selectedEpisode","target","value","redirectToEpisode","episodeLink","state","split","join","window","open","console","log","data","closeModal","undefined","type","currentCharacer","species","gender","episodes","length","for","onChange","episode","toLowerCase","toUpperCase","SearchBox","placeholder","handleSearchChange","App","getFilteredCharacters","searchField","Object","values","filter","includes","getFilteredEpisodes","url","fetch","then","response","json","users","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db9789b1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import react from 'react';\nimport './card-item.css' \nexport const Card = (props) => (\n    <div onClick={ () => {props.setCurrentCharacter(props.character)}}  className='card-container'>\n        <img alt={props.character.name} src = {props.character.image}/>\n        <h1>{props.character.name}</h1>\n    </div>\n)\n\n\n//Has single Cycle?\n\n","import React from 'react';\nimport './card-list.css'\nimport './card-item.css' \nimport {Card} from './card-item';\nclass CardList extends React.Component{\n \n constructor(props) {\n    super();\n    //set it to default \n    \n   \n  }\n\n   \n\n\n\n render(){\n return (<div className='card-list'>\n     {this.props.characters.map(character =>  \n            <Card setCurrentCharacter ={this.props.setCurrentCharacter} key = {character.id} character= {character}/>\n     )}\n </div>)\n }\n}\n\nexport default CardList","import React from 'react';\nimport './card-modal.css'\nexport default class CardModal extends React.Component{\n    constructor(props){\n        super();\n        this.state = {selectedEpisode: ''}\n    }\n\n\n    setEpisode = (e) =>{\n        this.setState({selectedEpisode: e.target.value})\n    }\n\n    redirectToEpisode = () =>{\n        const episodeLink = this.state.selectedEpisode.split(\" \").join(\"-\")\n        window.open(\n              `https://www.adultswim.com/videos/rick-and-morty/${episodeLink}`, \"_blank\");\n        \n    \n    }\n\n    render(){\n        console.log(this.props.data)\n        return(\n            <div className=\"modal\" >\n                <div className=\"modal-content\">\n                    \n                    <div className=\"modal-header\">\n                         <button onClick={()=>  this.props.closeModal(undefined)} className=\"close-button\"type=\"button\">X</button>\n\n                        <h1 className=\"modal-title\">{this.props.data.currentCharacer.name}</h1>\n\n                    </div>\n                    <div  className=\"modal-body\" className='card-modal-container'>\n                        \n                            <div className = \"image-container\">\n                            <img alt={this.props.data.currentCharacer.name} src = {this.props.data.currentCharacer.image}/>\n                           </div> \n                            <div className = \"bio-container\">\n                                <p>Species: {this.props.data.currentCharacer.species}</p>\n                                <p>Gender: {this.props.data.currentCharacer.gender}</p>\n                                <p>First Appearence: {this.props.episodes[0].name} </p>\n                            </div>\n                            {this.props.episodes.length >0 ? \n                            <div className=\"episode-container\">\n                                <label for=\"cars\">Episodes:</label>\n                                <select className = \"dropdown\" value={this.state.selectedEpisode} \n                                       onChange={this.setEpisode} >\n                                <option value=\"\"> Select Episodes</option>\n                                {this.props.episodes.map(episode =>  \n                                  \n                                  <option value = {episode.name.split(\"\").join(\"\").toLowerCase()}>{episode.name}</option>\n                                )}\n                            \n                                 </select>\n                                 {this.state.selectedEpisode !== \"\" ?\n                                    <div className=\"streaming-button-container\">\n                                     <button className=\"streaming-button\" onClick={this.redirectToEpisode}>STREAM {this.state.selectedEpisode.toUpperCase()}</button>\n                                     </div>\n                                    :\n                                    <div></div>\n                                 }\n                            </div> :\n                                 <div></div>\n                            }\n                            \n                    </div>\n                    <div className=\"modal-footer\">\n                       \n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n\n}","import React from 'react';\n\nimport './search-box.css';\n\nexport const SearchBox = ({placeholder, handleSearchChange}) => (\n       <input className='search' type='search' placeholder = {placeholder} onChange={handleSearchChange}/>\n   \n\n)","import React from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport CardList from './components/card-list/card-list'\nimport CardModal from './components/card-list/card-modal'\nimport {SearchBox} from './components/search-box/search-box'\nclass App extends React.Component {\n  constructor(props) {\n    super();\n    //set it to default \n    this.state = {\n      characters: \"\",\n      searchField: '',\n      currentCharacer: undefined,\n      episodes: undefined\n\n    };\n\n   \n  }\n\n\n   componentDidMount() {\n\n    fetch('https://rickandmortyapi.com/api/character/1,2,3,4,5,6,7,242,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30')\n    .then(response => response.json())\n    .then(users => this.setState({characters: users}))\n\n    \n\n    fetch(`https://rickandmortyapi.com/api/episode/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30`)\n    .then(response => response.json())\n    .then(users => this.setState({episodes: users}))\n\n    \n  } \n\n    \n\n   setCurrentCharacter = (e, data) =>{\n     this.setState({currentCharacer: e}, console.log(e))\n\n\n  }\n\n\n  getFilteredCharacters = (searchField) =>{\n     console.log(\"porfavorsenor\")\n\n     return Object.values(this.state.characters).filter(character =>\n                    character.name.toLowerCase().includes(searchField.toLowerCase()))\n  }\n\n   getFilteredEpisodes = () =>{\n     return Object.values(this.state.episodes).filter(episode =>\n                    this.state.currentCharacer.episode.includes(episode.url))\n  }\n\n  handleSearchChange = (e) =>{\n   this.setState({searchField: e.target.value})\n  }\n\n  closeModal = (e) =>{\n    this.setState({currentCharacer: \"\"})\n  }\n\n\n  render(){\n    const searchField = this.state.searchField; \n    return (\n      <div className=\"App\">\n        <h1>Rick and Morty Rolodex</h1>\n          <SearchBox \n            placeholder= 'search characters...'\n            handleSearchChange={this.handleSearchChange} \n            />\n          <div>\n            {  this.state.currentCharacer && this.state.episodes  ?\n              <div>\n                <CardModal data ={this.state} closeModal = {this.closeModal} episodes = {this.getFilteredEpisodes()} />\n              </div>  :\n              <div></div>\n          }\n          </div>\n          { this.state.characters != \"\" ?\n                 <CardList setCurrentCharacter = {this.setCurrentCharacter} characters = {this.getFilteredCharacters(searchField)}/>\n                :\n              <div>Loading..</div>\n            }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}